import {Datalink} from "../design-dimensions/datalink";

export enum PropertyName {
  visible='visible',
  currentDataList='currentDataList',
  currentColumn='currentColumn',
  outputData = 'outputData',
  conceptName = 'conceptName',
  conceptBlueprint = 'conceptBlueprint',
  attributes = 'attributes',
  textWhenEmpty='textWhenEmpty',
  caption = 'caption',
  footer = 'footer',
  tableStyle = 'tableStyle',
  responsiveTableLayout = 'responsiveTableLayout',
  paginator = 'paginator',
  tableBreakPoint = 'tableBreakPoint',
  rows = 'rows',
  rowsPerPage = 'rowsPerPage',
  filterComponent = 'filterComponent',
  height = 'height',
  width = 'width',
  label = 'label',
  icon = 'icon',
  calcHeight = 'calcHeight',
  calcWidth = 'calcWidth',
  dataAttribute = 'dataAttribute',
  row = 'row',
  column = 'column',
  columns = 'columns',
  wrap = 'wrap',
  justifyContentStart = 'justifyContentStart',
  justifyContentCenter = 'justifyContentCenter',
  justifyContentEnd = 'justifyContentEnd',
  justifyContentEvenly = 'justifyContentEvenly',
  justifyContentAround= 'justifyContentAround',
  justifyContentBetween = 'justifyContentBetween',
  alignItemsStart = 'alignItemsStart',
  alignItemsCenter = 'alignItemsCenter',
  alignItemsEnd = 'alignItemsEnd',
  alignItemsStretch = 'alignItemsStretch',
  alignContentStart =   'alignContentStart',
  alignContentCenter =  'alignContentCenter',
  alignContentEnd =     'alignContentEnd',
  alignContentEvenly =  'alignContentEvenly',
  alignContentAround=   'alignContentAround',
  alignContentBetween = 'alignContentBetween',
  overflowAuto = 'overflowAuto',
  overflowHidden = 'overflowHidden',
  overflowScroll = 'overflowScroll',
  overflowXAuto = 'overflowXAuto',
  overflowXHidden = 'overflowXHidden',
  overflowXScroll = 'overflowXScroll',
  overflowYAuto = 'overflowYAuto',
  overflowYHidden = 'overflowYHidden',
  overflowYScroll = 'overflowYScroll',
  holdSpace = 'holdSpace',
  backgroundColorPrimary = 'backgroundColorPrimary',
  backgroundColorWhite = 'backgroundColorWhite',
  backgroundColorDanger = 'backgroundColorDanger',
  children = 'children',
  dataLink = 'dataLink',
  content = 'content',
  header = 'header',
  columnHeaderComponents = 'columnHeaderComponents',
  condition = 'condition',
  buttonSize = 'buttonSize',
  buttonAppearance = 'buttonAppearance',
  buttonForm = 'buttonForm',
  buttonMeaning = 'buttonMeaning',
  iconSize = 'iconSize',
  iconMeaning = 'iconMeaning',
  padding = 'padding',
  margin = 'margin',
  data = 'data',
  rowsPerPageOptions='rowsPerPageOptions',
  first='first',
  totalRecords='totalRecords',
  showCurrentPageReport='showCurrentPageReport',
  showPageLinks='showPageLinks',
  showJumpToPageDropdown='showJumpToPageDropdown',
  showFirstLastIcon='showFirstLastIcon',
  currentPageReportTemplate='currentPageReportTemplate',
  display='display',
  component='component',
  border = 'border',
  extraColumns = 'extraColumns',
  confirmationModel = 'confirmationModel',
  anchor='anchor',
  hardCodedData = 'hardCodedData',
  disabled = 'disabled',
  keyFilter = 'keyFilter',
  small = 'small',
  large='large',
  invalid='invalid',
  dirty='dirty',
  floatLabel='floatLabel',
  iconPosition='iconPosition',
  advisoryText='advisoryText',
  values = 'values',
  selectedValue='selectedValue',
  options='options',
  selectedOptions = 'selectedOptions',
  optionLabel = 'optionLabel',
  minFractionDigits = 'minFractionDigits',
  mode = 'mode',
  maxFractionDigits = 'maxFractionDigits',
  useGrouping = 'useGrouping',
  min = 'min',
  max = 'max',
  locale = 'locale',
  suffix = 'suffix',
  prefix = 'prefix',
  showButtons = 'showButtons',
  step = 'step',
  currency = 'currency',
  currencyDisplay = 'currencyDisplay',
  decrementButtonClass = 'decrementButtonClass',
  incrementButtonClass = 'incrementButtonClass',
  incrementButtonIcon = 'incrementButtonIcon',
  decrementButtonIcon = 'decrementButtonIcon',
  buttonLayout = 'buttonLayout',
  optionValue = 'optionValue',
  placeholder = 'placeholder',
  reset = 'reset',
  menuItems = 'menuItems',
  start = 'start',
  end = 'end',
  center = 'center',
  repeater='repeater',
  title='title',
  subtitle='subtitle',
  propsByData='propsByData',
  cursor='cursor',
  blockUI='blockUI',
  backgroundColor ='backgroundColor',
  borderColor = 'borderColor',
  borderWidth = 'borderWidth',
  templateComponent = 'templateComponent',
  message = 'message',
}
